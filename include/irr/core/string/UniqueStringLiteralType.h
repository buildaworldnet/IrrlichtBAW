#ifndef __IRR_UNIQUE_STRING_LITERAL_TYPE_H_INCLUDED__
#define __IRR_UNIQUE_STRING_LITERAL_TYPE_H_INCLUDED__

#include "IrrCompileConfig.h"

#include "irr/macros.h"


namespace irr
{
namespace core
{

template<char... chars>
struct CharParameterPackToStringLiteral
{
	_IRR_STATIC_INLINE char value[] = { chars..., '\0' };
};


}
}


#define IRR_CORE_MAX_GET_CHAR_STRLEN 128

#define IRR_CORE_MIN(a,b) (((a)<(b))?(a):(b))
#define IRR_CORE_STRLEN(s) (sizeof(s)/sizeof(s[0])-1)

#define IRR_CORE_GET_CHAR(str, ii) ((IRR_CORE_MIN(ii,IRR_CORE_MAX_GET_CHAR_STRLEN-1))<IRR_CORE_STRLEN(str) ? str[ii]:0)


#define IRR_CORE_STRING_TO_CHAR_PARAMETER_PACK(s)\
IRR_CORE_GET_CHAR(s,0),\
IRR_CORE_GET_CHAR(s,1),\
IRR_CORE_GET_CHAR(s,2),\
IRR_CORE_GET_CHAR(s,3),\
IRR_CORE_GET_CHAR(s,4),\
IRR_CORE_GET_CHAR(s,5),\
IRR_CORE_GET_CHAR(s,6),\
IRR_CORE_GET_CHAR(s,7),\
IRR_CORE_GET_CHAR(s,8),\
IRR_CORE_GET_CHAR(s,9),\
IRR_CORE_GET_CHAR(s,10),\
IRR_CORE_GET_CHAR(s,11),\
IRR_CORE_GET_CHAR(s,12),\
IRR_CORE_GET_CHAR(s,13),\
IRR_CORE_GET_CHAR(s,14),\
IRR_CORE_GET_CHAR(s,15),\
IRR_CORE_GET_CHAR(s,16),\
IRR_CORE_GET_CHAR(s,17),\
IRR_CORE_GET_CHAR(s,18),\
IRR_CORE_GET_CHAR(s,19),\
IRR_CORE_GET_CHAR(s,20),\
IRR_CORE_GET_CHAR(s,21),\
IRR_CORE_GET_CHAR(s,22),\
IRR_CORE_GET_CHAR(s,23),\
IRR_CORE_GET_CHAR(s,24),\
IRR_CORE_GET_CHAR(s,25),\
IRR_CORE_GET_CHAR(s,26),\
IRR_CORE_GET_CHAR(s,27),\
IRR_CORE_GET_CHAR(s,28),\
IRR_CORE_GET_CHAR(s,29),\
IRR_CORE_GET_CHAR(s,30),\
IRR_CORE_GET_CHAR(s,31),\
IRR_CORE_GET_CHAR(s,32),\
IRR_CORE_GET_CHAR(s,33),\
IRR_CORE_GET_CHAR(s,34),\
IRR_CORE_GET_CHAR(s,35),\
IRR_CORE_GET_CHAR(s,36),\
IRR_CORE_GET_CHAR(s,37),\
IRR_CORE_GET_CHAR(s,38),\
IRR_CORE_GET_CHAR(s,39),\
IRR_CORE_GET_CHAR(s,40),\
IRR_CORE_GET_CHAR(s,41),\
IRR_CORE_GET_CHAR(s,42),\
IRR_CORE_GET_CHAR(s,43),\
IRR_CORE_GET_CHAR(s,44),\
IRR_CORE_GET_CHAR(s,45),\
IRR_CORE_GET_CHAR(s,46),\
IRR_CORE_GET_CHAR(s,47),\
IRR_CORE_GET_CHAR(s,48),\
IRR_CORE_GET_CHAR(s,49),\
IRR_CORE_GET_CHAR(s,50),\
IRR_CORE_GET_CHAR(s,51),\
IRR_CORE_GET_CHAR(s,52),\
IRR_CORE_GET_CHAR(s,53),\
IRR_CORE_GET_CHAR(s,54),\
IRR_CORE_GET_CHAR(s,55),\
IRR_CORE_GET_CHAR(s,56),\
IRR_CORE_GET_CHAR(s,57),\
IRR_CORE_GET_CHAR(s,58),\
IRR_CORE_GET_CHAR(s,59),\
IRR_CORE_GET_CHAR(s,60),\
IRR_CORE_GET_CHAR(s,61),\
IRR_CORE_GET_CHAR(s,62),\
IRR_CORE_GET_CHAR(s,63),\
IRR_CORE_GET_CHAR(s,64),\
IRR_CORE_GET_CHAR(s,65),\
IRR_CORE_GET_CHAR(s,66),\
IRR_CORE_GET_CHAR(s,67),\
IRR_CORE_GET_CHAR(s,68),\
IRR_CORE_GET_CHAR(s,69),\
IRR_CORE_GET_CHAR(s,70),\
IRR_CORE_GET_CHAR(s,71),\
IRR_CORE_GET_CHAR(s,72),\
IRR_CORE_GET_CHAR(s,72),\
IRR_CORE_GET_CHAR(s,72),\
IRR_CORE_GET_CHAR(s,73),\
IRR_CORE_GET_CHAR(s,74),\
IRR_CORE_GET_CHAR(s,75),\
IRR_CORE_GET_CHAR(s,76),\
IRR_CORE_GET_CHAR(s,77),\
IRR_CORE_GET_CHAR(s,78),\
IRR_CORE_GET_CHAR(s,79),\
IRR_CORE_GET_CHAR(s,80),\
IRR_CORE_GET_CHAR(s,81),\
IRR_CORE_GET_CHAR(s,82),\
IRR_CORE_GET_CHAR(s,83),\
IRR_CORE_GET_CHAR(s,84),\
IRR_CORE_GET_CHAR(s,85),\
IRR_CORE_GET_CHAR(s,86),\
IRR_CORE_GET_CHAR(s,87),\
IRR_CORE_GET_CHAR(s,88),\
IRR_CORE_GET_CHAR(s,89),\
IRR_CORE_GET_CHAR(s,90),\
IRR_CORE_GET_CHAR(s,91),\
IRR_CORE_GET_CHAR(s,92),\
IRR_CORE_GET_CHAR(s,93),\
IRR_CORE_GET_CHAR(s,94),\
IRR_CORE_GET_CHAR(s,95),\
IRR_CORE_GET_CHAR(s,96),\
IRR_CORE_GET_CHAR(s,97),\
IRR_CORE_GET_CHAR(s,98),\
IRR_CORE_GET_CHAR(s,99),\
IRR_CORE_GET_CHAR(s,100),\
IRR_CORE_GET_CHAR(s,101),\
IRR_CORE_GET_CHAR(s,102),\
IRR_CORE_GET_CHAR(s,103),\
IRR_CORE_GET_CHAR(s,104),\
IRR_CORE_GET_CHAR(s,105),\
IRR_CORE_GET_CHAR(s,106),\
IRR_CORE_GET_CHAR(s,107),\
IRR_CORE_GET_CHAR(s,108),\
IRR_CORE_GET_CHAR(s,109),\
IRR_CORE_GET_CHAR(s,110),\
IRR_CORE_GET_CHAR(s,111),\
IRR_CORE_GET_CHAR(s,112),\
IRR_CORE_GET_CHAR(s,113),\
IRR_CORE_GET_CHAR(s,114),\
IRR_CORE_GET_CHAR(s,115),\
IRR_CORE_GET_CHAR(s,116),\
IRR_CORE_GET_CHAR(s,117),\
IRR_CORE_GET_CHAR(s,118),\
IRR_CORE_GET_CHAR(s,119),\
IRR_CORE_GET_CHAR(s,120),\
IRR_CORE_GET_CHAR(s,121),\
IRR_CORE_GET_CHAR(s,122),\
IRR_CORE_GET_CHAR(s,123),\
IRR_CORE_GET_CHAR(s,124),\
IRR_CORE_GET_CHAR(s,125),\
IRR_CORE_GET_CHAR(s,126),\
IRR_CORE_GET_CHAR(s,127)


//
#define IRR_CORE_UNIQUE_STRING_LITERAL_TYPE(s)  irr::core::CharParameterPackToStringLiteral<IRR_CORE_STRING_TO_CHAR_PARAMETER_PACK(s)>


#endif
